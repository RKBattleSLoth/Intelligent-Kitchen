version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: intelligent-kitchen-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-intelligent_kitchen}
      POSTGRES_USER: ${POSTGRES_USER:-kitchen_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - kitchen-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: intelligent-kitchen-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kitchen-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: intelligent-kitchen-backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3001}
      DATABASE_URL: postgresql://${POSTGRES_USER:-kitchen_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-intelligent_kitchen}?sslmode=disable
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      # OpenRouter AI Configuration
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_MODEL_SMALL: ${OPENROUTER_MODEL_SMALL:-google/gemma-2-9b-it}
      OPENROUTER_MODEL_MEDIUM: ${OPENROUTER_MODEL_MEDIUM:-anthropic/claude-3.5-sonnet}
      OPENROUTER_MODEL_LARGE: ${OPENROUTER_MODEL_LARGE:-google/gemini-1.5-pro}
      # AI Service Configuration
      AI_ENABLE_CACHING: ${AI_ENABLE_CACHING:-true}
      AI_CACHE_TTL: ${AI_CACHE_TTL:-3600}
      AI_MAX_RETRIES: ${AI_MAX_RETRIES:-3}
      AI_TIMEOUT: ${AI_TIMEOUT:-30000}
      AI_ENABLE_STREAMING: ${AI_ENABLE_STREAMING:-true}
      # AI Rate Limiting
      AI_RATE_LIMIT_REQUESTS_PER_MINUTE: ${AI_RATE_LIMIT_REQUESTS_PER_MINUTE:-20}
      AI_RATE_LIMIT_TOKENS_PER_DAY: ${AI_RATE_LIMIT_TOKENS_PER_DAY:-1000000}
      # AI Cost Management
      AI_ENABLE_COST_MONITORING: ${AI_ENABLE_COST_MONITORING:-true}
      AI_COST_ALERT_THRESHOLD: ${AI_COST_ALERT_THRESHOLD:-100}
      AI_MAX_COST_PER_USER_MONTHLY: ${AI_MAX_COST_PER_USER_MONTHLY:-50}
      # Application Metadata
      OPENROUTER_APP_TITLE: ${OPENROUTER_APP_TITLE:-Intelligent Kitchen AI}
      APP_URL: ${APP_URL:-http://localhost:3000}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./database:/database
    networks:
      - kitchen-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: intelligent-kitchen-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - kitchen-network

volumes:
  postgres_data:
  redis_data:

networks:
  kitchen-network:
    driver: bridge